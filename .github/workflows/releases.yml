name: C/C++ CI and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.RELEASE_TOKEN }}
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libreadline-dev

    - name: Build
      run: make

    - name: Create release artifact
      run: |
        mkdir -p dist
        cp bin/qsh dist/
        tar -czf q-shell.tar.gz dist/
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    - name: Get short SHA
      id: get_short_sha
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: ${{ steps.get_short_sha.outputs.short_sha }}
        release_name: Build ${{ steps.get_short_sha.outputs.short_sha }}
        draft: false
        prerelease: false
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./q-shell.tar.gz
        asset_name: q-shell.tar.gz
        asset_content_type: application/gzip
      if: steps.create_release.outputs.upload_url != ''
